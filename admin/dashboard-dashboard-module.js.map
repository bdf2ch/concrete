{"version":3,"sources":["webpack:///./src/app/dashboard/components/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/components/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/components/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/components/delete-feedback-dialog/delete-feedback-dialog.component.css","webpack:///./src/app/dashboard/components/delete-feedback-dialog/delete-feedback-dialog.component.html","webpack:///./src/app/dashboard/components/delete-feedback-dialog/delete-feedback-dialog.component.ts","webpack:///./src/app/dashboard/components/delete-machine-dialog/delete-machine-dialog.component.css","webpack:///./src/app/dashboard/components/delete-machine-dialog/delete-machine-dialog.component.html","webpack:///./src/app/dashboard/components/delete-machine-dialog/delete-machine-dialog.component.ts","webpack:///./src/app/dashboard/components/edit-machine-dialog/edit-machine-dialog.component.css","webpack:///./src/app/dashboard/components/edit-machine-dialog/edit-machine-dialog.component.html","webpack:///./src/app/dashboard/components/edit-machine-dialog/edit-machine-dialog.component.ts","webpack:///./src/app/dashboard/components/feedback/feedback.component.css","webpack:///./src/app/dashboard/components/feedback/feedback.component.html","webpack:///./src/app/dashboard/components/feedback/feedback.component.ts","webpack:///./src/app/dashboard/components/machines/machines.component.css","webpack:///./src/app/dashboard/components/machines/machines.component.html","webpack:///./src/app/dashboard/components/machines/machines.component.ts","webpack:///./src/app/dashboard/components/new-machine-dialog/new-machine-dialog.component.css","webpack:///./src/app/dashboard/components/new-machine-dialog/new-machine-dialog.component.html","webpack:///./src/app/dashboard/components/new-machine-dialog/new-machine-dialog.component.ts","webpack:///./src/app/dashboard/components/upload-photo-dialog/upload-photo-dialog.component.css","webpack:///./src/app/dashboard/components/upload-photo-dialog/upload-photo-dialog.component.html","webpack:///./src/app/dashboard/components/upload-photo-dialog/upload-photo-dialog.component.ts","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/guards/dashboard.guard.ts","webpack:///./src/app/dashboard/guards/feedback.guard.ts","webpack:///./src/app/dashboard/guards/machines.guard.ts","webpack:///./src/app/dashboard/models/feedback.model.ts","webpack:///./src/app/dashboard/models/machine.model.ts","webpack:///./src/app/dashboard/resources/feedback.datasource.ts","webpack:///./src/app/dashboard/resources/feedback.resource.ts","webpack:///./src/app/dashboard/resources/machines.resource.ts","webpack:///./src/app/dashboard/services/feedback.service.ts","webpack:///./src/app/dashboard/services/machines.service.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-auto\\\">\\r\\n        <span>Панель управления</span>\\r\\n      </div>\\r\\n      <div class=\\\"col d-flex justify-content-center\\\">\\r\\n        <button mat-flat-button class=\\\"mr-3\\\" routerLink=\\\"/\\\">\\r\\n          <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n            <mat-icon class=\\\"mr-2\\\">directions_car</mat-icon>\\r\\n            Спецтехника\\r\\n          </div>\\r\\n        </button>\\r\\n\\r\\n        <button mat-flat-button routerLink=\\\"/feedback\\\">\\r\\n          <div class=\\\"d-flex justify-content-center align-items-center\\\">\\r\\n            <mat-icon class=\\\"mr-2\\\">message</mat-icon>\\r\\n            Обратная связь\\r\\n          </div>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-auto d-flex justify-content-end\\\" *ngIf=\\\"session.getUser() as user\\\">\\r\\n        <button mat-stroked-button color=\\\"accent\\\" [matMenuTriggerFor]=\\\"userMenu\\\">\\r\\n           {{ user?.firstName + ' ' + user?.lastName }}\\r\\n        </button>\\r\\n        <mat-menu #userMenu=\\\"matMenu\\\">\\r\\n          <button mat-menu-item (click)=\\\"signOut()\\\">Выход</button>\\r\\n        </mat-menu>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n<router-outlet style=\\\"marrgin-top: -64px;\\\"></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private readonly router: Router,\r\n              public readonly session: SessionService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  /**\r\n   * Завершение сессии пользователя\r\n   */\r\n  signOut() {\r\n    this.session.signOut();\r\n    this.router.navigate(['/signin']);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h5>Удаление сообщения</h5>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-12 text-center\\\">\\n      Удалить сообщение?\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <button mat-flat-button color=\\\"primary\\\" class=\\\"w-100\\\" (click)=\\\"deleteMessage()\\\" [disabled]=\\\"feedback.deletingInProgress() | async\\\">Удалить</button>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <button mat-flat-button color=\\\"warn\\\" class=\\\"w-100\\\" (click)=\\\"cancel()\\\" [disabled]=\\\"feedback.deletingInProgress() | async\\\">Отмена</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FeedbackService } from '../../services/feedback.service';\n\n@Component({\n  selector: 'app-delete-feedback-dialog',\n  templateUrl: './delete-feedback-dialog.component.html',\n  styleUrls: ['./delete-feedback-dialog.component.css']\n})\nexport class DeleteFeedbackDialogComponent implements OnInit {\n\n  constructor(private readonly dialogRef: MatDialogRef<DeleteFeedbackDialogComponent>,\n              public readonly feedback: FeedbackService,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {}\n\n  deleteMessage() {\n    console.log(this.data);\n    this.feedback.deleteMessage(this.data.message)\n      .subscribe(() => {\n        this.dialogRef.close();\n        this.feedback.fetchList().subscribe();\n      });\n  }\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h5>Удаление спецтранспорта</h5>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row mb-2\\\">\\r\\n    <div class=\\\"col-12 text-center\\\">\\r\\n      Удалить {{data.machine.title}}?\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <button mat-flat-button color=\\\"primary\\\" class=\\\"w-100\\\" (click)=\\\"deleteMachine()\\\" [disabled]=\\\"machines.deletingInProgress() | async\\\">Удалить</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <button mat-flat-button color=\\\"warn\\\" class=\\\"w-100\\\" (click)=\\\"cancel()\\\" [disabled]=\\\"machines.deletingInProgress() | async\\\">Отмена</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { MachinesService } from '../../services/machines.service';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-delete-machine-dialog',\r\n  templateUrl: './delete-machine-dialog.component.html',\r\n  styleUrls: ['./delete-machine-dialog.component.css']\r\n})\r\nexport class DeleteMachineDialogComponent implements OnInit {\r\n\r\n  constructor(private readonly dialogRef: MatDialogRef<DeleteMachineDialogComponent>,\r\n              public readonly machines: MachinesService,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  deleteMachine() {\r\n    console.log(this.data);\r\n    this.machines.deleteMachine(this.data.machine)\r\n      .subscribe(() => {\r\n        this.dialogRef.close();\r\n        this.machines.fetchList().subscribe();\r\n      });\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h4 class=\\\"ьи-3\\\">Редактирование спецтранспорта</h4>\\n<form [formGroup]=\\\"editMachineForm\\\">\\n  <mat-form-field appearance=\\\"standard\\\" class=\\\"w-100\\\">\\n    <mat-label>Наименование</mat-label>\\n    <input matInput placeholder=\\\"Введите наименование\\\" formControlName=\\\"title\\\" required>\\n    <mat-error>Вы не указали наименование спецтехники</mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"w-100\\\">\\n    <mat-label>Описание</mat-label>\\n    <textarea matInput placeholder=\\\"Введите описание\\\" formControlName=\\\"description\\\"></textarea>\\n  </mat-form-field>\\n\\n  <mat-form-field appearance=\\\"standard\\\" class=\\\"w-100\\\">\\n    <mat-label>Стоимость</mat-label>\\n    <input matInput placeholder=\\\"Введите стоимость\\\" formControlName=\\\"cost\\\" required>\\n    <mat-error>Вы не указали стоимость спецтехники</mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field appearance=\\\"standard\\\" class=\\\"w-100\\\">\\n    <mat-label>Стоимость аренды</mat-label>\\n    <input matInput placeholder=\\\"Введите стоимость аренды\\\" formControlName=\\\"rent\\\" required>\\n    <mat-error>Вы не указали стоимость аренды спецтехники</mat-error>\\n  </mat-form-field>\\n\\n    <mat-slide-toggle formControlName=\\\"is_enabled\\\">Отображать</mat-slide-toggle>\\n</form>\\n\\n<div class=\\\"d-flex mt-3\\\">\\n  <div class=\\\"w-50 p-1\\\">\\n    <button mat-flat-button color=\\\"primary\\\" class=\\\"w-100\\\" [disabled]=\\\"editMachineForm.invalid || editMachineForm.pristine || (machines.editingInProgress() | async)\\\" (click)=\\\"editMachine()\\\">Сохранить</button>\\n  </div>\\n  <div class=\\\"w-50 p-1\\\">\\n    <button mat-flat-button color=\\\"warn\\\" class=\\\"w-100\\\" (click)=\\\"cancel()\\\">Отмена</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MachinesService } from '../../services/machines.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Machine } from '../../models/machine.model';\n\n@Component({\n  selector: 'app-edit-machine-dialog',\n  templateUrl: './edit-machine-dialog.component.html',\n  styleUrls: ['./edit-machine-dialog.component.css']\n})\nexport class EditMachineDialogComponent implements OnInit {\n  public editMachineForm: FormGroup;\n\n  constructor(private readonly dialogRef: MatDialogRef<EditMachineDialogComponent>,\n              public readonly machines: MachinesService,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.editMachineForm = new FormGroup({\n      title: new FormControl(this.data.machine.title, Validators.required),\n      description: new FormControl(this.data.machine.description, Validators.required),\n      cost: new FormControl(this.data.machine.cost, Validators.required),\n      rent: new FormControl(this.data.machine.rent, Validators.required),\n      is_enabled: new FormControl(this.data.machine.isEnabled)\n    });\n  }\n\n  ngOnInit() {}\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  editMachine() {\n    const machine = new Machine({\n      id: this.data.machine.id,\n      title: this.editMachineForm.controls['title'].value,\n      description: this.editMachineForm.controls['description'].value,\n      cost: this.editMachineForm.controls['cost'].value,\n      rent: this.editMachineForm.controls['rent'].value,\n      is_enabled: this.editMachineForm.controls['is_enabled'].value === true ? 1 : 0,\n      photo_url: ''\n    });\n    this.machines.editMachine(machine)\n      .subscribe(() => {\n        this.cancel();\n        this.machines.fetchList().subscribe();\n      });\n  }\n\n}\n","module.exports = \".id-column {\\r\\n  width: 80px;\\r\\n}\\r\\n\\r\\n.name-column {\\r\\n\\r\\n}\\r\\n\\r\\n.email-column {}\\r\\n\\r\\n.message-column {}\\r\\n\\r\\n.date-created-column {\\r\\n  width: 150px;\\r\\n}\\r\\n\\r\\n.controls-column {\\r\\n  width: 50px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid h-100 d-flex\\\">\\r\\n  <div class=\\\"d-flex justify-content-center align-items-center h-100 w-100\\\" *ngIf=\\\"feedbackService.fetchingInProgress() | async\\\">\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z18 m-3 w-100\\\" *ngIf=\\\"!(feedbackService.fetchingInProgress() | async)\\\">\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"id-column\\\"> # </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"id-column\\\"> {{element.id}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"name-column\\\"> Имя </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"name-column\\\"> {{element.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Weight Column -->\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"email-column\\\"> E-mail </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"email-column\\\"> {{element.email}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"message\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"message-column\\\"> Сообщение </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"message-column\\\"> {{element.message}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"dateCreated\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"date-created-column\\\"> Дата отправки </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"date-created-column\\\"> {{element.dateCreated | date:'dd.MM:yyyy в hh:mm'}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Symbol Column -->\\r\\n      <ng-container matColumnDef=\\\"controls\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"controls-column\\\"></th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"controls-column\\\">\\r\\n          <button mat-icon-button matTooltip=\\\"Удалить сообщение\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openDeleteMessageDialog(element)\\\">\\r\\n            <mat-icon color=\\\"primary\\\">delete</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FeedbackDataSource } from '../../resources/feedback.datasource';\r\nimport { FeedbackService } from '../../services/feedback.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DeleteFeedbackDialogComponent } from '../delete-feedback-dialog/delete-feedback-dialog.component';\r\nimport { Feedback } from '../../models/feedback.model';\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit {\r\n  dataSource: FeedbackDataSource;\r\n  displayedColumns = ['id', 'name', 'email', 'message', 'dateCreated', 'controls'];\r\n\r\n  constructor(private readonly dialog: MatDialog,\r\n              public readonly feedbackService: FeedbackService) {}\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new FeedbackDataSource(this.feedbackService);\r\n    // this.dataSource.loadFeedback();\r\n  }\r\n\r\n  openDeleteMessageDialog(message: Feedback) {\r\n    this.dialog.open(DeleteFeedbackDialogComponent, {\r\n      width: '400px',\r\n      data: {\r\n        message: message\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"#add-machine-button {\\r\\n  display: block;\\r\\n  position: fixed;\\r\\n  bottom: 30px;\\r\\n  right: 30px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid d-flex p-3\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 col-sm-12 col-md-6 col-lg-3  mb-3\\\" *ngFor=\\\"let machine of machines.getList() | async\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-header>\\r\\n          <mat-card-title><h4>{{machine.title}}</h4></mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <img mat-card-image src=\\\"../{{machine.photo}}\\\">\\r\\n        <mat-card-content>\\r\\n          <p>\\r\\n            {{ machine.description }}\\r\\n          </p>\\r\\n          <div><strong>Стоимость:</strong>&nbsp; {{machine.cost}}</div>\\r\\n          <div><strong>Аренда:</strong>&nbsp; {{ machine.rent }}</div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions class=\\\"d-flex justify-content-end\\\">\\r\\n          <button mat-icon-button class=\\\"mr-2\\\" color=\\\"primary\\\" matTooltip=\\\"Загрузить изображение\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openUploadPhotoDialog(machine)\\\">\\r\\n            <mat-icon>add_a_photo</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button class=\\\"mr-2\\\" color=\\\"primary\\\" matTooltip=\\\"Редактировать\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openEditMachineDialog(machine)\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Удалить\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openDeleteMachineDialog(machine)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </button>\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<button mat-fab color=\\\"accent\\\" id=\\\"add-machine-button\\\" matTooltip=\\\"Добавить спецтранспорт\\\" matTooltipPosition=\\\"left\\\" (click)=\\\"openNewMachineDialog()\\\">\\r\\n  <mat-icon>add</mat-icon>\\r\\n</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { NewMachineDialogComponent } from '../new-machine-dialog/new-machine-dialog.component';\r\nimport { MachinesService } from '../../services/machines.service';\r\nimport { DeleteMachineDialogComponent } from '../delete-machine-dialog/delete-machine-dialog.component';\r\nimport { Machine } from '../../models/machine.model';\r\nimport { UploadPhotoDialogComponent } from '../upload-photo-dialog/upload-photo-dialog.component';\r\nimport { EditMachineDialogComponent } from '../edit-machine-dialog/edit-machine-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-machines',\r\n  templateUrl: './machines.component.html',\r\n  styleUrls: ['./machines.component.css']\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n\r\n  constructor(private readonly dialog: MatDialog,\r\n              public readonly machines: MachinesService) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openNewMachineDialog() {\r\n    this.dialog.open(NewMachineDialogComponent, {\r\n      width: '400px'\r\n    });\r\n  }\r\n\r\n  openDeleteMachineDialog(machine: Machine) {\r\n    this.dialog.open(DeleteMachineDialogComponent, {\r\n      width: '450px',\r\n      data: {\r\n        machine: machine\r\n      }\r\n    });\r\n  }\r\n\r\n  openUploadPhotoDialog(machine: Machine) {\r\n    this.dialog.open(UploadPhotoDialogComponent, {\r\n      width: '400px',\r\n      data: {\r\n        machine: machine\r\n      }\r\n    });\r\n  }\r\n\r\n  openEditMachineDialog(machine: Machine) {\r\n    this.dialog.open(EditMachineDialogComponent, {\r\n      width: '450px',\r\n      data: {\r\n        machine: machine\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h4>Новый спецтранспорт</h4>\\r\\n<form [formGroup]=\\\"newMachineForm\\\">\\r\\n  <mat-form-field appearance=\\\"standard\\\" class=\\\"w-100\\\">\\r\\n    <mat-label>Наименование</mat-label>\\r\\n    <input matInput placeholder=\\\"Введите наименование\\\" formControlName=\\\"title\\\" required>\\r\\n    <mat-error>Вы не указали наименование спецтехники</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"w-100\\\">\\r\\n    <mat-label>Описание</mat-label>\\r\\n    <textarea matInput placeholder=\\\"Введите описание\\\" formControlName=\\\"description\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field appearance=\\\"standard\\\" class=\\\"w-100\\\">\\r\\n    <mat-label>Стоимость</mat-label>\\r\\n    <input matInput placeholder=\\\"Введите стоимость\\\" formControlName=\\\"cost\\\" required>\\r\\n    <mat-error>Вы не указали стоимость спецтехники</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field appearance=\\\"standard\\\" class=\\\"w-100\\\">\\r\\n    <mat-label>Стоимость аренды</mat-label>\\r\\n    <input matInput placeholder=\\\"Введите стоимость аренды\\\" formControlName=\\\"rent\\\" required>\\r\\n    <mat-error>Вы не указали стоимость аренды спецтехники</mat-error>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n\\r\\n<div>\\r\\n  <input mat-stroked-button type=\\\"file\\\" (change)=\\\"onChangePhoto($event)\\\">\\r\\n</div>\\r\\n\\r\\n  <div class=\\\"d-flex\\\">\\r\\n    <div class=\\\"w-50 p-1\\\">\\r\\n      <button mat-flat-button color=\\\"primary\\\" class=\\\"w-100\\\" [disabled]=\\\"newMachineForm.invalid || !photo || (machines.addingInProgress() | async)\\\" (click)=\\\"addMachine()\\\">Добавить</button>\\r\\n    </div>\\r\\n    <div class=\\\"w-50 p-1\\\">\\r\\n      <button mat-flat-button color=\\\"warn\\\" class=\\\"w-100\\\" (click)=\\\"closeNewMachineDialog()\\\">Отмена</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MachinesService } from '../../services/machines.service';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { Machine } from '../../models/machine.model';\r\n\r\n@Component({\r\n  selector: 'app-new-machine-dialog',\r\n  templateUrl: './new-machine-dialog.component.html',\r\n  styleUrls: ['./new-machine-dialog.component.css']\r\n})\r\nexport class NewMachineDialogComponent implements OnInit {\r\n  public machine: Machine;\r\n  public newMachineForm: FormGroup;\r\n  public photo: File | null;\r\n\r\n  constructor(private readonly dialogRef: MatDialogRef<NewMachineDialogComponent>,\r\n              public readonly machines: MachinesService) {\r\n    this.newMachineForm = new FormGroup({\r\n      title: new FormControl(null, Validators.required),\r\n      description: new FormControl(null),\r\n      cost: new FormControl(null, Validators.required),\r\n      rent: new FormControl(null, Validators.required)\r\n    });\r\n    this.photo = null;\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  closeNewMachineDialog() {\r\n    this.dialogRef.close();\r\n    this.newMachineForm.reset();\r\n  }\r\n\r\n  onChangePhoto(data: any) {\r\n    console.log(data);\r\n    this.photo = data.target.files[0];\r\n    console.log('photo', this.photo);\r\n  }\r\n\r\n  addMachine() {\r\n    const machine = new Machine({\r\n      id: 0,\r\n      title: this.newMachineForm.controls['title'].value,\r\n      description: this.newMachineForm.controls['description'].value,\r\n      cost: this.newMachineForm.controls['cost'].value,\r\n      rent: this.newMachineForm.controls['rent'].value,\r\n      is_enabled: 1,\r\n      photo_url: ''\r\n    });\r\n    this.machines.addMachine(machine, this.photo)\r\n      .subscribe(() => {\r\n        this.dialogRef.close();\r\n        this.machines.fetchList()\r\n          .subscribe();\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 d-flex justify-content-center align-items-center\\\">\\n      <input type=\\\"file\\\" name=\\\"photo\\\" (change)=\\\"onChangePhoto($event)\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n      <button mat-flat-button color=\\\"primary\\\" class=\\\"w-100 mt-4\\\" [disabled]=\\\"(machines.uploadingInProgress() | async) || !photo\\\" (click)=\\\"upload()\\\">\\n        <div class=\\\"d-flex flex-row justify-content-center align-items-center\\\">\\n          <mat-spinner [diameter]=\\\"15\\\" class=\\\"mr-3\\\" color=\\\"accent\\\" *ngIf=\\\"machines.uploadingInProgress() | async\\\"></mat-spinner>\\n          Загрузить\\n        </div>\\n      </button>\\n    </div>\\n    <div class=\\\"col-6\\\">\\n      <button mat-flat-button color=\\\"warn\\\" class=\\\"w-100 mt-4\\\" [disabled]=\\\"machines.uploadingInProgress() | async\\\" (click)=\\\"cancel()\\\">Отмена</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MachinesService } from '../../services/machines.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-upload-photo-dialog',\n  templateUrl: './upload-photo-dialog.component.html',\n  styleUrls: ['./upload-photo-dialog.component.css']\n})\nexport class UploadPhotoDialogComponent implements OnInit {\n  public photo: File | null;\n\n  constructor(private readonly dialogRef: MatDialogRef<UploadPhotoDialogComponent>,\n              public readonly machines: MachinesService,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.photo = null;\n  }\n\n  ngOnInit() {}\n\n  onChangePhoto(event: any) {\n    console.log(event.target.files[0]);\n    this.photo = event.target.files[0];\n  }\n\n  cancel() {\n    this.dialogRef.close();\n    this.photo = null;\n  }\n\n  upload() {\n    console.log(this.data);\n    this.machines.uploadPhoto(this.data.machine.id, this.photo)\n      .subscribe((url: string) => {\n        console.log('url', url);\n        this.data.machine.photo = url;\n        this.cancel();\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { MachinesComponent } from './components/machines/machines.component';\r\nimport { DashboardGuard } from './guards/dashboard.guard';\r\nimport { MachinesGuard } from './guards/machines.guard';\r\nimport { FeedbackGuard } from './guards/feedback.guard';\r\nimport { FeedbackComponent } from './components/feedback/feedback.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    canActivateChild: [\r\n      DashboardGuard\r\n    ],\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'machines',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'machines',\r\n        component: MachinesComponent,\r\n        resolve: [\r\n          MachinesGuard\r\n        ]\r\n      },\r\n      {\r\n        path: 'feedback',\r\n        component: FeedbackComponent,\r\n        resolve: [\r\n          FeedbackGuard\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  /*\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n  */\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { MachinesComponent } from './components/machines/machines.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardGuard } from './guards/dashboard.guard';\r\nimport { MachinesGuard } from './guards/machines.guard';\r\nimport { FeedbackGuard } from './guards/feedback.guard';\r\nimport { FeedbackComponent } from './components/feedback/feedback.component';\r\nimport { NewMachineDialogComponent } from './components/new-machine-dialog/new-machine-dialog.component';\r\nimport { DeleteMachineDialogComponent } from './components/delete-machine-dialog/delete-machine-dialog.component';\r\nimport { UploadPhotoDialogComponent } from './components/upload-photo-dialog/upload-photo-dialog.component';\r\nimport { EditMachineDialogComponent } from './components/edit-machine-dialog/edit-machine-dialog.component';\r\nimport { DeleteFeedbackDialogComponent } from './components/delete-feedback-dialog/delete-feedback-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    DashboardRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    MachinesComponent,\r\n    FeedbackComponent,\r\n    NewMachineDialogComponent,\r\n    DeleteMachineDialogComponent,\r\n    UploadPhotoDialogComponent,\r\n    EditMachineDialogComponent,\r\n    DeleteFeedbackDialogComponent\r\n  ],\r\n  providers: [\r\n    DashboardGuard,\r\n    MachinesGuard,\r\n    FeedbackGuard\r\n  ],\r\n  entryComponents: [\r\n    NewMachineDialogComponent,\r\n    DeleteMachineDialogComponent,\r\n    UploadPhotoDialogComponent,\r\n    EditMachineDialogComponent,\r\n    DeleteFeedbackDialogComponent\r\n  ]\r\n})\r\nexport class DashboardModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild} from '@angular/router';\r\nimport { SessionService } from '../../shared/services/session.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardGuard implements CanActivate, CanActivateChild {\r\n  constructor(private readonly router: Router,\r\n              private readonly session: SessionService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    if (!this.session.getUser()) {\r\n      this.router.navigate(['/signin']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    console.log('dashboard can activate child', this.session.getUser());\r\n    if (!this.session.getUser()) {\r\n      this.router.navigate(['/signin']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from '../models/feedback.model';\r\nimport {FeedbackService} from '../services/feedback.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackGuard implements Resolve<Feedback[]> {\r\n  constructor(private readonly feedback: FeedbackService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Feedback[]> | Promise<Feedback[]> | Feedback[] {\r\n    return this.feedback.fetchList();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Machine } from '../models/machine.model';\r\nimport { MachinesService } from '../services/machines.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MachinesGuard implements Resolve<Machine[]> {\r\n  constructor(private readonly machines: MachinesService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Machine[]> {\r\n    return this.machines.fetchList();\r\n  }\r\n}\r\n","import { IFeedback } from '../interfaces/feedback.interface';\r\n\r\n/**\r\n * Класс, реализующтй интерфейс сообщения обратной связи\r\n */\r\nexport class Feedback {\r\n  id: number;           // Идентфиикатор\r\n  name: string;         // Имя отправителя\r\n  email: string;        // E-mail отправителя\r\n  message: string;      // Сообщение\r\n  dateCreated: Date;    // Дата отправки сообщения\r\n\r\n  /**\r\n   * Конструктор\r\n   * @param config - Параметры инициализации\r\n   */\r\n  constructor(config?: IFeedback) {\r\n    this.id = config ? config.id : null;\r\n    this.name = config ? config.name : null;\r\n    this.email = config ? config.email : null;\r\n    this.message = config ? config.message : null;\r\n    this.dateCreated = config ? new Date(Number(config.date_created)) : null;\r\n  }\r\n}\r\n","import { IMachine } from '../interfaces/machine.interface';\r\n\r\n/**\r\n * Класс, реалиизующий интерфейс спецтехники\r\n */\r\nexport class Machine {\r\n  id: number;               // Идентификатор\r\n  title: string;            // Наименование\r\n  description: string;      // Описание\r\n  photo: string;            // URL фотографии\r\n  cost: string;             // Стоимость\r\n  rent: string;             // Цена аренды\r\n  isEnabled: boolean;       // Доступность\r\n\r\n  /**\r\n   * Конструктор\r\n   * @param config - Параметры инициализации\r\n   */\r\n  constructor(config?: IMachine) {\r\n    this.id = config ? Number(config.id) : 0;\r\n    this.title = config ? config.title : null;\r\n    this.description = config ? config.description : null;\r\n    this.photo = config ? config.photo_url : null;\r\n    this.cost = config ? config.cost : null;\r\n    this.rent = config ? config.rent : null;\r\n    this.isEnabled = config ? (Number(config.is_enabled) === 1 ? true : false) : false;\r\n  }\r\n\r\n  /**\r\n   * Экспорт модели в DTO\r\n   */\r\n  toDTO(): IMachine {\r\n    const result: IMachine = {\r\n      id: this.id ? this.id : 0,\r\n      title: this.title ? this.title : '',\r\n      description: this.description ? this.description : '',\r\n      cost: this.cost ? String(this.cost) : '',\r\n      rent: this.rent ? String(this.rent) : '',\r\n      photo_url: this.photo ? this.photo : '',\r\n      is_enabled: 1\r\n    };\r\n    return result;\r\n  }\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { Feedback } from '../models/feedback.model';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { FeedbackService } from '../services/feedback.service';\r\nimport { CollectionViewer } from '@angular/cdk/collections';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport class FeedbackDataSource implements DataSource<Feedback> {\r\n\r\n  private feedbackSubject = new BehaviorSubject<Feedback[]>([]);\r\n\r\n  constructor(private feedbackService: FeedbackService) {}\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<Feedback[]> {\r\n    //return this.feedbackSubject.asObservable();\r\n    return this.feedbackService.getList();\r\n  }\r\n\r\n  disconnect(collectionViewer: CollectionViewer): void {\r\n    this.feedbackSubject.complete();\r\n  }\r\n\r\n  loadFeedback() {\r\n    /*\r\n    this.feedbackService.fetchList()\r\n      .pipe(\r\n         catchError(() => of([])),\r\n    ).subscribe(\r\n      feedback => this.feedbackSubject.next(feedback)\r\n    );\r\n    */\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ResourceParams, ResourceHandler, ResourceAction, ResourceRequestMethod, IResourceMethod, Resource } from '@ngx-resource/core';\r\nimport { IFeedback } from '../interfaces/feedback.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@ResourceParams({\r\n  pathPrefix: environment.apiUrl\r\n})\r\nexport class FeedbackResource extends Resource {\r\n\r\n  constructor(handler: ResourceHandler) {\r\n    super(handler);\r\n  }\r\n\r\n  /**\r\n   * Path: /\r\n   * Method: GET\r\n   * Получение списка сообщений\r\n   */\r\n  @ResourceAction({\r\n    path: '/',\r\n    method: ResourceRequestMethod.Get,\r\n    withCredentials: true\r\n  })\r\n  getList: IResourceMethod<{action: string}, IFeedback[]>;\r\n\r\n  /**\r\n   * Path: /\r\n   * Method: GET\r\n   * Удаление сообщения\r\n   */\r\n  @ResourceAction({\r\n    path: '/',\r\n    method: ResourceRequestMethod.Get,\r\n    withCredentials: true\r\n  })\r\n  deleteMessage: IResourceMethod<{action: string, id: number}, boolean>;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport {\r\n  IResourceMethod,\r\n  Resource,\r\n  ResourceAction,\r\n  ResourceHandler,\r\n  ResourceParams,\r\n  ResourceQueryMappingMethod,\r\n  ResourceRequestMethod\r\n} from '@ngx-resource/core';\r\nimport { IMachine } from '../interfaces/machine.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@ResourceParams({\r\n  pathPrefix: environment.apiUrl\r\n})\r\nexport class MachinesResource extends Resource {\r\n\r\n  constructor(handler: ResourceHandler) {\r\n    super(handler);\r\n  }\r\n\r\n  /**\r\n   * Path: /\r\n   * Method: GET\r\n   * Получение списка спецтранспорта\r\n   */\r\n  @ResourceAction({\r\n    path: '/',\r\n    method: ResourceRequestMethod.Get,\r\n    withCredentials: true\r\n  })\r\n  getList: IResourceMethod<{action: string}, IMachine[]>;\r\n\r\n  /**\r\n   * Path: /\r\n   * Method: GET\r\n   * Добавление спецтранспорта\r\n   */\r\n  @ResourceAction({\r\n    path: '/',\r\n    method: ResourceRequestMethod.Get,\r\n    withCredentials: true\r\n  })\r\n  addMachine: IResourceMethod<{action: string, machine: IMachine}, IMachine>;\r\n\r\n  /**\r\n   * Path: /\r\n   * Method: GET\r\n   * Редактирование спецтранспорта\r\n   */\r\n  @ResourceAction({\r\n    path: '/',\r\n    method: ResourceRequestMethod.Get,\r\n    withCredentials: true\r\n  })\r\n  editMachine: IResourceMethod<{action: string, id: number, title: string, description: string, cost: string, rent: string, is_enabled: number}, IMachine>;\r\n\r\n  /**\r\n   * Path: /\r\n   * Method: GET\r\n   * Удаление спецтранспорта\r\n   */\r\n  @ResourceAction({\r\n    path: '/',\r\n    method: ResourceRequestMethod.Get,\r\n    withCredentials: true\r\n  })\r\n  deleteMachine: IResourceMethod<{action: string, id: number}, void>;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from, Observable, of } from 'rxjs';\r\nimport { catchError, finalize, map } from 'rxjs/operators';\r\nimport { Feedback } from '../models/feedback.model';\r\nimport { FeedbackResource } from '../resources/feedback.resource';\r\nimport { IFeedback } from '../interfaces/feedback.interface';\r\nimport { Machine } from '../models/machine.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n  private messages: BehaviorSubject<Feedback[]>;\r\n  private fetchingMessagesInProgress: BehaviorSubject<boolean>;\r\n  private deletingMessageInProgress: BehaviorSubject<boolean>;\r\n\r\n  constructor(private readonly resource: FeedbackResource) {\r\n    this.messages = new BehaviorSubject<Feedback[]>([]);\r\n    this.fetchingMessagesInProgress = new BehaviorSubject(false);\r\n    this.deletingMessageInProgress = new BehaviorSubject(false);\r\n\r\n    this.messages.next([\r\n      new Feedback({\r\n        id: 1,\r\n        name: 'Pidor',\r\n        email: 'dasdasd',\r\n        message: 'lorem dsfdsfs dsfdsds dsfsdfs',\r\n        date_created: new Date().getTime()\r\n      }),\r\n      new Feedback({\r\n        id: 1,\r\n        name: 'Pidor',\r\n        email: 'dasdasd',\r\n        message: 'lorem dsfdsfs dsfdsds dsfsdfs',\r\n        date_created: new Date().getTime()\r\n      }),\r\n      new Feedback({\r\n        id: 1,\r\n        name: 'Pidor',\r\n        email: 'dasdasd',\r\n        message: 'lorem dsfdsfs dsfdsds dsfsdfs',\r\n        date_created: new Date().getTime()\r\n      }),\r\n      new Feedback({\r\n        id: 1,\r\n        name: 'Pidor',\r\n        email: 'dasdasd',\r\n        message: 'lorem dsfdsfs dsfdsds dsfsdfs',\r\n        date_created: new Date().getTime()\r\n      })\r\n    ]);\r\n  }\r\n\r\n  fetchList(): Observable<Feedback[]> {\r\n    this.fetchingMessagesInProgress.next(true);\r\n    return from(this.resource.getList({action: 'getFeedbackMessages'}))\r\n      .pipe(\r\n        map((result: IFeedback[]) => {\r\n          const messages: Feedback[] = [];\r\n          result.forEach((item: IFeedback) => {\r\n            messages.push(new Feedback(item));\r\n          });\r\n          this.messages.next(messages);\r\n          return this.messages.value;\r\n        }),\r\n        catchError(() => {\r\n          this.fetchingMessagesInProgress.next(false);\r\n          return of([]);\r\n        }),\r\n        finalize(() => {\r\n          this.fetchingMessagesInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteMessage(message: Feedback): Observable<boolean> {\r\n    this.deletingMessageInProgress.next(true);\r\n    return from(this.resource.deleteMessage({action: 'deleteMessage', id: message.id}))\r\n      .pipe(\r\n        finalize(() => {\r\n          this.deletingMessageInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  getList(): Observable<Feedback[]> {\r\n    return this.messages.asObservable();\r\n  }\r\n\r\n  fetchingInProgress(): Observable<boolean> {\r\n    return this.fetchingMessagesInProgress.asObservable();\r\n  }\r\n\r\n  deletingInProgress(): Observable<boolean> {\r\n    return this.deletingMessageInProgress.asObservable();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from, Observable } from 'rxjs';\r\nimport { MachinesResource } from '../resources/machines.resource';\r\nimport { Machine } from '../models/machine.model';\r\nimport { finalize, map } from 'rxjs/operators';\r\nimport { IMachine } from '../interfaces/machine.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MachinesService {\r\n  private machines: BehaviorSubject<Machine[]>;\r\n  private fetchingMachinesInProgress: BehaviorSubject<boolean>;\r\n  private addingMachineInProgress: BehaviorSubject<boolean>;\r\n  private editingMachineInProgress: BehaviorSubject<boolean>;\r\n  private deletingMachineInProgress: BehaviorSubject<boolean>;\r\n  private uploadingPhotoInProgress: BehaviorSubject<boolean>;\r\n\r\n  constructor(private readonly http: HttpClient,\r\n              private readonly resource: MachinesResource) {\r\n    this.machines = new BehaviorSubject<Machine[]>([\r\n      new Machine({\r\n        id: 1,\r\n        title: 'asdasd',\r\n        description: 'asdasd dasda asdas sdasda asdas asdas ',\r\n        cost: '125 000 рублей',\r\n        rent: '5000 рублей в сутки',\r\n        photo_url: '',\r\n        is_enabled: 1\r\n      }),\r\n      new Machine({\r\n        id: 1,\r\n        title: 'asdasd',\r\n        description: 'asdasd dasda asdas sdasda asdas asdas ',\r\n        cost: '125 000 рублей',\r\n        rent: '5000 рублей в сутки',\r\n        photo_url: '',\r\n        is_enabled: 1\r\n      }),\r\n      new Machine({\r\n        id: 1,\r\n        title: 'asdasd',\r\n        description: 'asdasd dasda asdas sdasda asdas asdas ',\r\n        cost: '125 000 рублей',\r\n        rent: '5000 рублей в сутки',\r\n        photo_url: '',\r\n        is_enabled: 1\r\n      }),\r\n      new Machine({\r\n        id: 1,\r\n        title: 'asdasd',\r\n        description: 'asdasd dasda asdas sdasda asdas asdas ',\r\n        cost: '125 000 рублей',\r\n        rent: '5000 рублей в сутки',\r\n        photo_url: '',\r\n        is_enabled: 1\r\n      }),\r\n      new Machine({\r\n        id: 1,\r\n        title: 'asdasd',\r\n        description: 'asdasd dasda asdas sdasda asdas asdas ',\r\n        cost: '125 000 рублей',\r\n        rent: '5000 рублей в сутки',\r\n        photo_url: '',\r\n        is_enabled: 1\r\n      }),\r\n      new Machine({\r\n        id: 1,\r\n        title: 'asdasd',\r\n        description: 'asdasd dasda asdas sdasda asdas asdas ',\r\n        cost: '125 000 рублей',\r\n        rent: '5000 рублей в сутки',\r\n        photo_url: '',\r\n        is_enabled: 1\r\n      })\r\n    ]);\r\n    this.fetchingMachinesInProgress = new BehaviorSubject(false);\r\n    this.addingMachineInProgress = new BehaviorSubject(false);\r\n    this.editingMachineInProgress = new BehaviorSubject(false);\r\n    this.deletingMachineInProgress = new BehaviorSubject(false);\r\n    this.uploadingPhotoInProgress = new BehaviorSubject(false);\r\n  }\r\n\r\n  fetchList(): Observable<Machine[]> {\r\n    this.fetchingMachinesInProgress.next(true);\r\n    return from(this.resource.getList({action: 'getMachinesList'}))\r\n      .pipe(\r\n        map((result: IMachine[]) => {\r\n          console.log('result', result);\r\n          const machines: Machine[] = [];\r\n          result.forEach((item: IMachine) => {\r\n            machines.push(new Machine(item));\r\n          });\r\n          this.machines.next(machines);\r\n          console.log(this.machines.value);\r\n          return this.machines.value;\r\n        }),\r\n        finalize(() => {\r\n          this.fetchingMachinesInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  addMachine(machine: Machine, photo: File): Observable<Machine> {\r\n    console.log(machine);\r\n    const formData: FormData = new FormData();\r\n    formData.append('action', 'addMachine');\r\n    formData.append('title', machine.title);\r\n    formData.append('description', machine.description);\r\n    formData.append('cost', machine.cost);\r\n    formData.append('rent', machine.rent);\r\n    formData.append('photo', photo);\r\n\r\n    this.addingMachineInProgress.next(true);\r\n    return this.http.post(environment.apiUrl, formData)\r\n      .pipe(\r\n        map((item: IMachine) => {\r\n          return new Machine(item);\r\n        }),\r\n        finalize(() => {\r\n          this.addingMachineInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  editMachine(machine: Machine): Observable<Machine> {\r\n    this.editingMachineInProgress.next(true);\r\n    return from(this.resource.editMachine({action: 'editMachine', id: machine.id, title: machine.title, description: machine.description, cost: machine.cost, rent: machine.rent, is_enabled: machine.isEnabled ? 1 : 0}))\r\n      .pipe(\r\n        map((item: IMachine) => {\r\n          return new Machine(item);\r\n        }),\r\n        finalize(() => {\r\n          this.editingMachineInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteMachine(machine: Machine): Observable<void> {\r\n    this.deletingMachineInProgress.next(true);\r\n    return from(this.resource.deleteMachine({action: 'deleteMachine', id: machine.id}))\r\n      .pipe(\r\n        finalize(() => {\r\n          this.deletingMachineInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  uploadPhoto(id: number, photo: File): Observable<string> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('action', 'uploadMachinePhoto');\r\n    formData.append('id', String(id));\r\n    formData.append('photo', photo);\r\n\r\n    this.uploadingPhotoInProgress.next(true);\r\n    return this.http.post(environment.apiUrl, formData)\r\n      .pipe(\r\n        map((url: string) => {\r\n          return url;\r\n        }),\r\n        finalize(() => {\r\n          this.uploadingPhotoInProgress.next(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  getList(): Observable<Machine[]> {\r\n    return this.machines.asObservable();\r\n  }\r\n\r\n  addingInProgress(): Observable<boolean> {\r\n    return this.addingMachineInProgress.asObservable();\r\n  }\r\n\r\n  deletingInProgress(): Observable<boolean> {\r\n    return this.deletingMachineInProgress.asObservable();\r\n  }\r\n\r\n  editingInProgress(): Observable<boolean> {\r\n    return this.editingMachineInProgress.asObservable();\r\n  }\r\n\r\n  uploadingInProgress(): Observable<boolean> {\r\n    return this.uploadingPhotoInProgress.asObservable();\r\n  }\r\n}\r\n"],"sourceRoot":""}