{"version":3,"sources":["webpack:///./src/app/authentication/authentication-routing.module.ts","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/components/authentication/authentication.component.css","webpack:///./src/app/authentication/components/authentication/authentication.component.html","webpack:///./src/app/authentication/components/authentication/authentication.component.ts","webpack:///./src/app/authentication/components/sign-in/sign-in.component.css","webpack:///./src/app/authentication/components/sign-in/sign-in.component.html","webpack:///./src/app/authentication/components/sign-in/sign-in.component.ts","webpack:///./src/app/authentication/guards/authentication.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACkB;AACsB;AAC7B;AAE3D,IAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2GAAuB;QAClC,gBAAgB,EAAE;YAChB,gFAAmB;SACpB;QACD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,qFAAe;aAC3B;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,EAAE;gBACd,SAAS,EAAE,MAAM;aAClB;SACF;KACF;CACF,CAAC;AAUF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QARvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCC;AACc;AACkB;AACsB;AACjB;AACV;AAgBpE;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAbhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;gBACZ,0FAA2B;aAC5B;YACD,YAAY,EAAE;gBACZ,2GAAuB;gBACvB,qFAAe;aAChB;YACD,SAAS,EAAE;gBACT,gFAAmB;aACpB;SACF,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACrBjC,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR,cAAY,CAAC;IAJF,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,uBAAuB,CAKnC;IAAD,8BAAC;CAAA;AALmC;;;;;;;;;;;;ACPpC,4BAA4B,mBAAmB,KAAK,K;;;;;;;;;;;ACApD,qlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AACM;AAC1B;AAEP;AAOzC;IAKE,yBAA6B,MAAc,EACd,QAAqB,EACtB,OAAuB;QAFtB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAa;QACtB,YAAO,GAAP,OAAO,CAAgB;QACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR,cAAY,CAAC;IAEb,gCAAM,GAAN;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;aACvG,SAAS,CAAC,UAAC,IAAiB;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI,EAAE;gBACT,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,EAAE,SAAS,EAAE;oBACtD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IA9BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAMqC,sDAAM;YACJ,6DAAW;YACb,+EAAc;OAPxC,eAAe,CAgC3B;IAAD,sBAAC;CAAA;AAhC2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZe;AAC0E;AAC9C;AAKvE;IACE,6BAA6B,MAAc,EACd,OAAuB;QADvB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAgB;IAAG,CAAC;IAExD,yCAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,8CAAgB,GAAhB,UAAiB,UAAkC,EAAE,KAA0B;QAC7E,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IApBU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEqC,sDAAM;YACL,+EAAc;OAFzC,mBAAmB,CAqB/B;IAAD,0BAAC;CAAA;AArB+B","file":"authentication-authentication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\r\nimport {AuthenticationGuard} from './guards/authentication.guard';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthenticationComponent,\r\n    canActivateChild: [\r\n      AuthenticationGuard\r\n    ],\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SignInComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: '',\r\n        pathMatch: 'full'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SignInComponent } from './components/sign-in/sign-in.component';\r\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { AuthenticationGuard } from './guards/authentication.guard';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    AuthenticationRoutingModule\r\n  ],\r\n  declarations: [\r\n    AuthenticationComponent,\r\n    SignInComponent,\r\n  ],\r\n  providers: [\r\n    AuthenticationGuard\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-authentication',\r\n  templateUrl: './authentication.component.html',\r\n  styleUrls: ['./authentication.component.css']\r\n})\r\nexport class AuthenticationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n}\r\n","module.exports = \"#sign-in {\\r\\n  width: 400px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"w-100 h-100 d-flex justify-content-center align-items-center\\\">\\r\\n  <mat-card id=\\\"sign-in\\\">\\r\\n    <div mat-card-title>Авторизация</div>\\r\\n    <div>\\r\\n      <form [formGroup]=\\\"signInForm\\\">\\r\\n        <!-- START: Учетная запись -->\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Учетная запись</mat-label>\\r\\n          <input matInput placeholder=\\\"Введите учетную запись\\\" formControlName=\\\"account\\\" required>\\r\\n          <mat-error>Вы не ввели учетную запись</mat-error>\\r\\n        </mat-form-field>\\r\\n        <!-- END: Учетная запись -->\\r\\n\\r\\n        <!-- START: Пароль -->\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n          <mat-label>Пароль</mat-label>\\r\\n          <input matInput placeholder=\\\"Введите пароль\\\" formControlName=\\\"password\\\" required>\\r\\n          <mat-error>Вы не ввели пароль</mat-error>\\r\\n        </mat-form-field>\\r\\n        <!-- END: Пароль -->\\r\\n\\r\\n        <button mat-flat-button class=\\\"w-100\\\" [disabled]=\\\"signInForm.invalid || (session.isAuthorizationInProgress() | async) === true\\\" (click)=\\\"signIn()\\\">\\r\\n          <div class=\\\"d-flex justify-content-center align-items-center\\\"\\r\\n               *ngIf=\\\"session.isAuthorizationInProgress() | async\\\">\\r\\n            <mat-spinner diameter=\\\"20\\\" class=\\\"mr-3\\\"></mat-spinner>\\r\\n            Загрузка\\r\\n          </div>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(session.isAuthorizationInProgress() | async)\\\">Войти</div>\\r\\n        </button>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SessionService } from '../../../shared/services/session.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { User } from '../../../shared/models/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  public account: string;\r\n  public password: string;\r\n  public signInForm: FormGroup;\r\n\r\n  constructor(private readonly router: Router,\r\n              private readonly snackBar: MatSnackBar,\r\n              public readonly session: SessionService) {\r\n    this.account = null;\r\n    this.password = null;\r\n    this.signInForm = new FormGroup({\r\n      account: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  signIn() {\r\n    this.session.signIn(this.signInForm.controls['account'].value, this.signInForm.controls['password'].value)\r\n      .subscribe((user: User | null) => {\r\n        console.log(user);\r\n        if (!user) {\r\n          this.snackBar.open('Пользователь не найден', 'Закрыть', {\r\n            duration: 2000,\r\n          });\r\n        } else {\r\n          this.router.navigate(['/machines']);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\r\nimport { SessionService } from '../../shared/services/session.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationGuard implements CanActivate, CanActivateChild {\r\n  constructor(private readonly router: Router,\r\n              private readonly session: SessionService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    if (this.session.getUser()) {\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.session.getUser()) {\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"],"sourceRoot":""}